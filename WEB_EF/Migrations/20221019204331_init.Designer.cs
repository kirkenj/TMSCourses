// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiDatabase.Models.DBContexts;

#nullable disable

namespace WebApiDatabase.Migrations
{
    [DbContext(typeof(AutoparkDBContext))]
    [Migration("20221019204331_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WEB_EF.Models.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarType")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("ClientID");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("CarType");

                    b.HasIndex("ClientId");

                    b.HasIndex(new[] { "RegNumber" }, "UQ__Cars__5D9A6740DCED2DC8")
                        .IsUnique();

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("WEB_EF.Models.Entities.CarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TypeName" }, "IX_CarTypes")
                        .IsUnique();

                    b.ToTable("CarTypes");
                });

            modelBuilder.Entity("WEB_EF.Models.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name", "Surname" }, "UQ__Clients__2D535FA47897D182")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("WEB_EF.Models.Entities.Journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<DateTime>("ComingDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DepartureDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ParkingPlace")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ParkingPlace");

                    b.ToTable("Journal", (string)null);
                });

            modelBuilder.Entity("WEB_EF.Models.Entities.ParkingPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarType");

                    b.ToTable("ParkingPlaces");
                });

            modelBuilder.Entity("WEB_EF.Models.Entities.Car", b =>
                {
                    b.HasOne("WEB_EF.Models.Entities.CarType", "CarTypeNavigation")
                        .WithMany("Cars")
                        .HasForeignKey("CarType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Cars_CarTypes");

                    b.HasOne("WEB_EF.Models.Entities.Client", "Client")
                        .WithMany("Cars")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Cars_Clients");

                    b.Navigation("CarTypeNavigation");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WEB_EF.Models.Entities.Journal", b =>
                {
                    b.HasOne("WEB_EF.Models.Entities.Car", "Car")
                        .WithMany("Journals")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Journal_Cars");

                    b.HasOne("WEB_EF.Models.Entities.ParkingPlace", "ParkingPlaceNavigation")
                        .WithMany("Journals")
                        .HasForeignKey("ParkingPlace")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired()
                        .HasConstraintName("FK_Journal_ParkingPlaces");

                    b.Navigation("Car");

                    b.Navigation("ParkingPlaceNavigation");
                });

            modelBuilder.Entity("WEB_EF.Models.Entities.ParkingPlace", b =>
                {
                    b.HasOne("WEB_EF.Models.Entities.CarType", "CarTypeNavigation")
                        .WithMany("ParkingPlaces")
                        .HasForeignKey("CarType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ParkingPlaces_CarTypes");

                    b.Navigation("CarTypeNavigation");
                });

            modelBuilder.Entity("WEB_EF.Models.Entities.Car", b =>
                {
                    b.Navigation("Journals");
                });

            modelBuilder.Entity("WEB_EF.Models.Entities.CarType", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("ParkingPlaces");
                });

            modelBuilder.Entity("WEB_EF.Models.Entities.Client", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("WEB_EF.Models.Entities.ParkingPlace", b =>
                {
                    b.Navigation("Journals");
                });
#pragma warning restore 612, 618
        }
    }
}
